<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.mapper.EmployeeMapper">

    <select id="getClassesByTeacherEid" parameterType="int" resultType="com.qf.pojo.Classes">
        select * from classes where teacher_eid=#{eid}
    </select>

    <select id="getClassesListByTeacherEid" parameterType="int" resultType="com.qf.pojo.Classes">
        select * from classes where teacher_eid=${eid}
    </select>

    <select id="getClassesByHeadmasterEid" resultType="com.qf.pojo.Classes">
        select * from classes where headmaster_eid=#{eid}
    </select>

    <select id="getClassesListByHeadmasterEid" parameterType="int" resultType="com.qf.pojo.Classes">
        select * from classes where headmaster_eid=#{eid}
    </select>

    <select id="getClassesListByBoss" resultType="com.qf.pojo.Classes">
        select * from classes
    </select>

    <insert id="addStudentList" parameterType="java.util.ArrayList">
        insert into student (sid, sname, ssex, sage, sphone, cid, uid) values
        <foreach collection="list" item="i" separator=",">
            (
            #{i.sid},
            #{i.sname},
            #{i.ssex},
            #{i.sage},
            #{i.sphone},
            #{i.classes.cid},
            #{i.user.uid}
            )
        </foreach>
    </insert>
    <insert id="addStudent" parameterType="com.qf.pojo.Student">
        insert into student (sid, sname, ssex, sage, sphone, cid, uid) values (sid, sname, ssex, sage, sphone, classes.cid, user.uid)
    </insert>
    <insert id="addUser" parameterType="com.qf.pojo.User" useGeneratedKeys="true" keyProperty="uid">
        insert into user (username,rolename) values (#{username},#{rolename})
    </insert>

    <select id="getEmployeeByUid" parameterType="int" resultType="com.qf.pojo.Employee">
        select * from employee where uid=#{uid}
    </select>
    <select id="getClassesByEid" parameterType="int" resultType="com.qf.pojo.Classes">
        select * from classes where eid=#{eid}
    </select>
    <select id="getStudentListByCid" parameterType="int" resultType="com.qf.pojo.Student">
        select * from student where cid=#{cid}
    </select>
    <resultMap id="usermap" type="user">
        <id property="uid" column="uid"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="rolename" column="rolename"></result>
    </resultMap>
    <resultMap id="employmap" type="employee">
        <id property="eid" column="eid"></id>
        <result property="ename" column="ename"></result>
        <result property="esex" column="esex"></result>
        <result property="eage" column="eage"></result>
        <result property="ephone" column="ephone"></result>
        <association property="user" column="uid" javaType="user" resultMap="usermap"></association>
    </resultMap>
    <select id="getEmployeeCK" parameterType="employee" resultMap="employmap">
        select * from employee,user
        <where>
            <if test="eid!=0">
                eid=#{eid}
            </if>
            <if test="user.rolename!=null">
                and user.rolename=#{user.rolename}
            </if>

            and employee.uid=user.uid
        </where>
    </select>
    <select id="getEmployeeMHCK" parameterType="java.lang.String" resultMap="employmap">
        select * from employee where ename like '%${value}%'
    </select>
    <insert id="addEmployeeTJ" parameterType="employee">
        insert into employee (ename,esex,eage,ephone,uid) values (#{ename},#{esex},#{eage},#{ephone},#{user.uid})
    </insert>
    <update id="updateEmployeeXG">
        update employee
        <set>
            <if test="ename!=null">
                ename=#{ename},
            </if>
            <if test="esex!=null">
                esex=#{esex},
            </if>
            <if test="eage!=0">
                eage=#{eage},
            </if>
            <if test="ephone!=null">
                ephone=#{ephone}
            </if>
        </set>
        where eid=#{eid}
    </update>
    <delete id="deleteEmployeeSC" parameterType="employee">
        delete from employee where eid=#{eid}
    </delete>
</mapper>
        <!--yubo-->